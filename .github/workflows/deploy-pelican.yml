# Simple workflow for deploying static content to GitHub Pages
name: Deploy pelican content to Github Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]
    # paths:
    #     - 'content/**'
    #     - 'pelicanconf.py'
    #     - 'publishconf.py'
    #     - 'Makefile'
    #     - 'pyproject.toml'
  

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build-html:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: create .env file
        run: |
          echo "GITHUB_SHA=${{ github.sha }}" >> .env
      - name: Build html using production settings
        run: make docker.publish
      - name: create build artifacts
        uses: actions/upload-pages-artifact@v1
        with:
          path: |
            output
  deploy-pages:
    # https://github.com/actions/deploy-pages
    needs: build-html
    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write # to deploy to Pages
      id-token: write # to verify the deployment originates from an appropriate source
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
